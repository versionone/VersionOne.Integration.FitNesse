V1Fit: Integrating FIT Test Results with VersionOne


The following documents the configuration for the hosted services used to for integration of VersionOne with FIT.

There are 3 hosted services required:
- a FitReaderService, used for interpreting and publishing FIT test run and test suite results
- a TimePublisherService (named FitReaderServiceTimer in the default config), used to trigger the FitReaderService every N milliseconds (configured)
- a TestWriterService used for listening for test run and suite results, and updating/importing into VersionOne where required


FitReaderService
-----------------
NOTES: the account the service is running as (i.e. Log On As setting) must have read rights to the directory configured in the <Watch> element.

FitReaderService processes XML files in the schema generated by fitnesse.runner.FormattingOption. See http://fitnesse.org/FitNesse.FormattingOption for more information about formatting FIT results into XML.

<FitReaderService class="VersionOne.ServiceHost.TestServices.Fit.FitReaderService, VersionOne.ServiceHost.TestServices">
	<Watch>.\FitTestResults</Watch>
	<Filter>*.xml</Filter>
</FitReaderService>

Configuration elements:
<Watch>: the directory to poll for FIT test results files.
<Filter>: the file filter to use when polling for FIT test results files; it may contain any valid search pattern compatible with Directory.GetFiles().



TimePublisherService (FitReaderServiceTimer)
---------------------------------------------
<FitReaderServiceTimer class="VersionOne.ServiceHost.Core.Services.TimePublisherService, VersionOne.ServiceHost.Core">
	<Interval>60000</Interval>
	<PublishClass>VersionOne.ServiceHost.TestServices.Fit.FitReaderService+IntervalSync, VersionOne.ServiceHost.TestServices</PublishClass>
</FitReaderServiceTimer>

<Interval>: the interval, in milliseconds, between events raised (via publishing the IntervalSync).
<PublishClass>: contains the class and its' assembly that that the TimePublisherService will publish at every interval. For FIT integration using the FitServiceReader, it must be as shown above.


TestWriterService
=================
NOTES: If VersionOne is configured to use Windows Integrated Security, the account the service is running as must be a configured VersionOne user, with appropriate permissions within the projects that require:
- test run creation
- test status updates
- defect creation (if CreateDefect is All or CurrentIteration)
Also, ensure that the <username> & <password> are left empty when using integrated security.


Default Configuration
---------------------
<TestWriterService class="VersionOne.ServiceHost.TestServices.TestWriterService, VersionOne.ServiceHost.TestServices">
	<Settings>
		<ApplicationUrl>http://localhost/VersionOne.Web/</ApplicationUrl>
		<Username>admin</Username>
		<Password>admin</Password>
		<APIVersion>6.5.0.0</APIVersion>
		<IntegratedAuth>false</IntegratedAuth>
	</Settings>
	<PassedOid>TestStatus:129</PassedOid>
	<FailedOid>TestStatus:155</FailedOid>
	<TestReferenceAttribute>Number</TestReferenceAttribute>
	<ChangeComment>Updated by VersionOne.ServiceHost</ChangeComment>
	<!-- Embedded Rich Text (HTML) is valid in this suffix -->
	<DescriptionSuffix>Check the external test system for more details.</DescriptionSuffix>
	<CreateDefect>All</CreateDefect>
</TestWriterService>


Configuration Elements
----------------------

<ApplicationUrl>: the URL for your VersionOne application.

<Username>: the VersionOne account username, if using native VersionOne security.  If using Windows Integrated Security, leave empty.

<Password>: the VersionOne account password, if using native VersionOne security.  If using Windows Integrated Security, leave empty.

<APIVersion>: the minimum application version required for this hosted service.

<IntegratedAuth>: false if using VersionOne native security, true is using Windows Integrated Security.

<PassedOid>: the Test status Oid in VersionOne that indicates test a test succeeded
<FailedOid> the Test status Oid in VersionOne that indicates that a test failed

<TestReferenceAttribute>: the cross-reference used to associate tests in VersionOne to test in the external test system ('Number' is the default, 'Reference' another option)

<ChangeComment>: The change comment put into history for any modifications the service makes in VersionOne

<DescriptionSuffix>: A suffix for the description of any defects that the service creates; Embedded Rich Text (HTML) is valid in this suffix

<CreateDefect>: indicates whether the TestWriterService should create defects when automated tests fail for closed tests in VersionOne.  Valid values are:
- All: creates a 'failed test' defect for any closed tests in the project
- CurrentIteration: only creates a 'failed test' defect for closed tests within the current iteration
- None: never creates defects
